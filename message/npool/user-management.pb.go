// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: npool/user-management.proto

package npool

import (
	npool "github.com/NpoolPlatform/application-management/message/npool"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// request body and response
type VersionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,100,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{0}
}

func (x *VersionResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type PageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageIndex uint32 `protobuf:"varint,1,opt,name=PageIndex,proto3" json:"PageIndex,omitempty"`
	PageSize  uint32 `protobuf:"varint,2,opt,name=PageSize,proto3" json:"PageSize,omitempty"`
}

func (x *PageInfo) Reset() {
	*x = PageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageInfo) ProtoMessage() {}

func (x *PageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageInfo.ProtoReflect.Descriptor instead.
func (*PageInfo) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{1}
}

func (x *PageInfo) GetPageIndex() uint32 {
	if x != nil {
		return x.PageIndex
	}
	return 0
}

func (x *PageInfo) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type UserBasicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Username     string `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`
	Password     string `protobuf:"bytes,15,opt,name=Password,proto3" json:"Password,omitempty"`
	Avatar       string `protobuf:"bytes,3,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Age          uint32 `protobuf:"varint,4,opt,name=Age,proto3" json:"Age,omitempty"`
	Gender       string `protobuf:"bytes,5,opt,name=Gender,proto3" json:"Gender,omitempty"`
	Region       string `protobuf:"bytes,6,opt,name=Region,proto3" json:"Region,omitempty"`
	Birthday     string `protobuf:"bytes,7,opt,name=Birthday,proto3" json:"Birthday,omitempty"`
	Country      string `protobuf:"bytes,8,opt,name=Country,proto3" json:"Country,omitempty"`
	Province     string `protobuf:"bytes,9,opt,name=Province,proto3" json:"Province,omitempty"`
	City         string `protobuf:"bytes,10,opt,name=City,proto3" json:"City,omitempty"`
	PhoneNumber  string `protobuf:"bytes,11,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	EmailAddress string `protobuf:"bytes,12,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	CreateAt     uint32 `protobuf:"varint,13,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	UpdateAt     uint32 `protobuf:"varint,14,opt,name=UpdateAt,proto3" json:"UpdateAt,omitempty"`
	LoginTimes   uint32 `protobuf:"varint,19,opt,name=LoginTimes,proto3" json:"LoginTimes,omitempty"`
	KycVerify    bool   `protobuf:"varint,16,opt,name=KycVerify,proto3" json:"KycVerify,omitempty"`
	GaVerify     bool   `protobuf:"varint,17,opt,name=GaVerify,proto3" json:"GaVerify,omitempty"`
	GaLogin      bool   `protobuf:"varint,22,opt,name=GaLogin,proto3" json:"GaLogin,omitempty"`
	SignupMethod string `protobuf:"bytes,18,opt,name=SignupMethod,proto3" json:"SignupMethod,omitempty"`
	Career       string `protobuf:"bytes,20,opt,name=Career,proto3" json:"Career,omitempty"`
	DisplayName  string `protobuf:"bytes,21,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
}

func (x *UserBasicInfo) Reset() {
	*x = UserBasicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserBasicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBasicInfo) ProtoMessage() {}

func (x *UserBasicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBasicInfo.ProtoReflect.Descriptor instead.
func (*UserBasicInfo) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{2}
}

func (x *UserBasicInfo) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserBasicInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UserBasicInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserBasicInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserBasicInfo) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *UserBasicInfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UserBasicInfo) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UserBasicInfo) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UserBasicInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UserBasicInfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *UserBasicInfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UserBasicInfo) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *UserBasicInfo) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *UserBasicInfo) GetCreateAt() uint32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *UserBasicInfo) GetUpdateAt() uint32 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *UserBasicInfo) GetLoginTimes() uint32 {
	if x != nil {
		return x.LoginTimes
	}
	return 0
}

func (x *UserBasicInfo) GetKycVerify() bool {
	if x != nil {
		return x.KycVerify
	}
	return false
}

func (x *UserBasicInfo) GetGaVerify() bool {
	if x != nil {
		return x.GaVerify
	}
	return false
}

func (x *UserBasicInfo) GetGaLogin() bool {
	if x != nil {
		return x.GaLogin
	}
	return false
}

func (x *UserBasicInfo) GetSignupMethod() string {
	if x != nil {
		return x.SignupMethod
	}
	return ""
}

func (x *UserBasicInfo) GetCareer() string {
	if x != nil {
		return x.Career
	}
	return ""
}

func (x *UserBasicInfo) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type SignupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// optional
	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	// optional
	EmailAddress string `protobuf:"bytes,4,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	// optional
	PhoneNumber string `protobuf:"bytes,6,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	Code        string `protobuf:"bytes,7,opt,name=Code,proto3" json:"Code,omitempty"`
	AppID       string `protobuf:"bytes,8,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *SignupRequest) Reset() {
	*x = SignupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignupRequest) ProtoMessage() {}

func (x *SignupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignupRequest.ProtoReflect.Descriptor instead.
func (*SignupRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{3}
}

func (x *SignupRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SignupRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SignupRequest) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *SignupRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *SignupRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SignupRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type SignupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserBasicInfo `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *SignupResponse) Reset() {
	*x = SignupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignupResponse) ProtoMessage() {}

func (x *SignupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignupResponse.ProtoReflect.Descriptor instead.
func (*SignupResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{4}
}

func (x *SignupResponse) GetInfo() *UserBasicInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UserID is who is queried.
	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AppID  string `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserBasicInfo `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetUserResponse) Reset() {
	*x = GetUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserResponse) ProtoMessage() {}

func (x *GetUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserResponse.ProtoReflect.Descriptor instead.
func (*GetUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserResponse) GetInfo() *UserBasicInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  *PageInfo `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	AppID string    `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetUsersRequest) Reset() {
	*x = GetUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersRequest) ProtoMessage() {}

func (x *GetUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersRequest.ProtoReflect.Descriptor instead.
func (*GetUsersRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{7}
}

func (x *GetUsersRequest) GetInfo() *PageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetUsersRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UserBasicInfo `protobuf:"bytes,1,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetUsersResponse) Reset() {
	*x = GetUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsersResponse) ProtoMessage() {}

func (x *GetUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsersResponse.ProtoReflect.Descriptor instead.
func (*GetUsersResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{8}
}

func (x *GetUsersResponse) GetInfos() []*UserBasicInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdateUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info   *UserBasicInfo `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	AppID  string         `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string         `protobuf:"bytes,3,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *UpdateUserInfoRequest) Reset() {
	*x = UpdateUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoRequest) ProtoMessage() {}

func (x *UpdateUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateUserInfoRequest) GetInfo() *UserBasicInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *UpdateUserInfoRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UpdateUserInfoRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type UpdateUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserBasicInfo `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UpdateUserInfoResponse) Reset() {
	*x = UpdateUserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoResponse) ProtoMessage() {}

func (x *UpdateUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateUserInfoResponse) GetInfo() *UserBasicInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type BindUserPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	PhoneNumber string `protobuf:"bytes,2,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	AppID       string `protobuf:"bytes,3,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *BindUserPhoneRequest) Reset() {
	*x = BindUserPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindUserPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindUserPhoneRequest) ProtoMessage() {}

func (x *BindUserPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindUserPhoneRequest.ProtoReflect.Descriptor instead.
func (*BindUserPhoneRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{11}
}

func (x *BindUserPhoneRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *BindUserPhoneRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *BindUserPhoneRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type BindUserPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *BindUserPhoneResponse) Reset() {
	*x = BindUserPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindUserPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindUserPhoneResponse) ProtoMessage() {}

func (x *BindUserPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindUserPhoneResponse.ProtoReflect.Descriptor instead.
func (*BindUserPhoneResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{12}
}

func (x *BindUserPhoneResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type BindUserEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	EmailAddress string `protobuf:"bytes,2,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	Code         string `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	AppID        string `protobuf:"bytes,4,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *BindUserEmailRequest) Reset() {
	*x = BindUserEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindUserEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindUserEmailRequest) ProtoMessage() {}

func (x *BindUserEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindUserEmailRequest.ProtoReflect.Descriptor instead.
func (*BindUserEmailRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{13}
}

func (x *BindUserEmailRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *BindUserEmailRequest) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *BindUserEmailRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *BindUserEmailRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type BindUserEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *BindUserEmailResponse) Reset() {
	*x = BindUserEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindUserEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindUserEmailResponse) ProtoMessage() {}

func (x *BindUserEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindUserEmailResponse.ProtoReflect.Descriptor instead.
func (*BindUserEmailResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{14}
}

func (x *BindUserEmailResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type UnbindUserPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AppID  string `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *UnbindUserPhoneRequest) Reset() {
	*x = UnbindUserPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindUserPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindUserPhoneRequest) ProtoMessage() {}

func (x *UnbindUserPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindUserPhoneRequest.ProtoReflect.Descriptor instead.
func (*UnbindUserPhoneRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{15}
}

func (x *UnbindUserPhoneRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UnbindUserPhoneRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type UnbindUserPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UnbindUserPhoneResponse) Reset() {
	*x = UnbindUserPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindUserPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindUserPhoneResponse) ProtoMessage() {}

func (x *UnbindUserPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindUserPhoneResponse.ProtoReflect.Descriptor instead.
func (*UnbindUserPhoneResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{16}
}

func (x *UnbindUserPhoneResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type UnbindUserEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AppID  string `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *UnbindUserEmailRequest) Reset() {
	*x = UnbindUserEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindUserEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindUserEmailRequest) ProtoMessage() {}

func (x *UnbindUserEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindUserEmailRequest.ProtoReflect.Descriptor instead.
func (*UnbindUserEmailRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{17}
}

func (x *UnbindUserEmailRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UnbindUserEmailRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type UnbindUserEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UnbindUserEmailResponse) Reset() {
	*x = UnbindUserEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindUserEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindUserEmailResponse) ProtoMessage() {}

func (x *UnbindUserEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindUserEmailResponse.ProtoReflect.Descriptor instead.
func (*UnbindUserEmailResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{18}
}

func (x *UnbindUserEmailResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type UserProvider struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID           string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	ProviderID       string `protobuf:"bytes,3,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	ProviderUserID   string `protobuf:"bytes,4,opt,name=ProviderUserID,proto3" json:"ProviderUserID,omitempty"`
	UserProviderInfo string `protobuf:"bytes,5,opt,name=UserProviderInfo,proto3" json:"UserProviderInfo,omitempty"`
	CreateAt         uint32 `protobuf:"varint,6,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
	UpdateAt         uint32 `protobuf:"varint,7,opt,name=UpdateAt,proto3" json:"UpdateAt,omitempty"`
}

func (x *UserProvider) Reset() {
	*x = UserProvider{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserProvider) ProtoMessage() {}

func (x *UserProvider) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserProvider.ProtoReflect.Descriptor instead.
func (*UserProvider) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{19}
}

func (x *UserProvider) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UserProvider) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserProvider) GetProviderID() string {
	if x != nil {
		return x.ProviderID
	}
	return ""
}

func (x *UserProvider) GetProviderUserID() string {
	if x != nil {
		return x.ProviderUserID
	}
	return ""
}

func (x *UserProvider) GetUserProviderInfo() string {
	if x != nil {
		return x.UserProviderInfo
	}
	return ""
}

func (x *UserProvider) GetCreateAt() uint32 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *UserProvider) GetUpdateAt() uint32 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

type BindThirdPartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AppID  string `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
	// third party(provIDer)'s ID
	ProviderID string `protobuf:"bytes,3,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	// UserID in third party(provIDer)
	ProviderUserID   string `protobuf:"bytes,4,opt,name=ProviderUserID,proto3" json:"ProviderUserID,omitempty"`
	UserProviderInfo string `protobuf:"bytes,5,opt,name=UserProviderInfo,proto3" json:"UserProviderInfo,omitempty"`
}

func (x *BindThirdPartyRequest) Reset() {
	*x = BindThirdPartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindThirdPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindThirdPartyRequest) ProtoMessage() {}

func (x *BindThirdPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindThirdPartyRequest.ProtoReflect.Descriptor instead.
func (*BindThirdPartyRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{20}
}

func (x *BindThirdPartyRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *BindThirdPartyRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *BindThirdPartyRequest) GetProviderID() string {
	if x != nil {
		return x.ProviderID
	}
	return ""
}

func (x *BindThirdPartyRequest) GetProviderUserID() string {
	if x != nil {
		return x.ProviderUserID
	}
	return ""
}

func (x *BindThirdPartyRequest) GetUserProviderInfo() string {
	if x != nil {
		return x.UserProviderInfo
	}
	return ""
}

type BindThirdPartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserProvider `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *BindThirdPartyResponse) Reset() {
	*x = BindThirdPartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BindThirdPartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BindThirdPartyResponse) ProtoMessage() {}

func (x *BindThirdPartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BindThirdPartyResponse.ProtoReflect.Descriptor instead.
func (*BindThirdPartyResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{21}
}

func (x *BindThirdPartyResponse) GetInfo() *UserProvider {
	if x != nil {
		return x.Info
	}
	return nil
}

type UnbindThirdPartyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID     string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AppID      string `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
	ProviderID string `protobuf:"bytes,3,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
}

func (x *UnbindThirdPartyRequest) Reset() {
	*x = UnbindThirdPartyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindThirdPartyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindThirdPartyRequest) ProtoMessage() {}

func (x *UnbindThirdPartyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindThirdPartyRequest.ProtoReflect.Descriptor instead.
func (*UnbindThirdPartyRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{22}
}

func (x *UnbindThirdPartyRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UnbindThirdPartyRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *UnbindThirdPartyRequest) GetProviderID() string {
	if x != nil {
		return x.ProviderID
	}
	return ""
}

type UnbindThirdPartyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserProvider `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UnbindThirdPartyResponse) Reset() {
	*x = UnbindThirdPartyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnbindThirdPartyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbindThirdPartyResponse) ProtoMessage() {}

func (x *UnbindThirdPartyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbindThirdPartyResponse.ProtoReflect.Descriptor instead.
func (*UnbindThirdPartyResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{23}
}

func (x *UnbindThirdPartyResponse) GetInfo() *UserProvider {
	if x != nil {
		return x.Info
	}
	return nil
}

type ChangeUserPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AppID       string `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
	OldPassword string `protobuf:"bytes,4,opt,name=OldPassword,proto3" json:"OldPassword,omitempty"`
	Password    string `protobuf:"bytes,5,opt,name=Password,proto3" json:"Password,omitempty"`
}

func (x *ChangeUserPasswordRequest) Reset() {
	*x = ChangeUserPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeUserPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserPasswordRequest) ProtoMessage() {}

func (x *ChangeUserPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserPasswordRequest.ProtoReflect.Descriptor instead.
func (*ChangeUserPasswordRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{24}
}

func (x *ChangeUserPasswordRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ChangeUserPasswordRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ChangeUserPasswordRequest) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *ChangeUserPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type ChangeUserPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ChangeUserPasswordResponse) Reset() {
	*x = ChangeUserPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeUserPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserPasswordResponse) ProtoMessage() {}

func (x *ChangeUserPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserPasswordResponse.ProtoReflect.Descriptor instead.
func (*ChangeUserPasswordResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{25}
}

func (x *ChangeUserPasswordResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type CertificateKycRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AppID        string `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
	FirstName    string `protobuf:"bytes,3,opt,name=FirstName,proto3" json:"FirstName,omitempty"`
	LastName     string `protobuf:"bytes,4,opt,name=LastName,proto3" json:"LastName,omitempty"`
	FrontCardImg string `protobuf:"bytes,5,opt,name=FrontCardImg,proto3" json:"FrontCardImg,omitempty"`
	BackCardImg  string `protobuf:"bytes,6,opt,name=BackCardImg,proto3" json:"BackCardImg,omitempty"`
	UserCardImg  string `protobuf:"bytes,7,opt,name=UserCardImg,proto3" json:"UserCardImg,omitempty"`
	CardType     string `protobuf:"bytes,8,opt,name=CardType,proto3" json:"CardType,omitempty"`
	CardID       string `protobuf:"bytes,9,opt,name=CardID,proto3" json:"CardID,omitempty"`
	Region       string `protobuf:"bytes,10,opt,name=Region,proto3" json:"Region,omitempty"`
}

func (x *CertificateKycRequest) Reset() {
	*x = CertificateKycRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificateKycRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateKycRequest) ProtoMessage() {}

func (x *CertificateKycRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateKycRequest.ProtoReflect.Descriptor instead.
func (*CertificateKycRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{26}
}

func (x *CertificateKycRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CertificateKycRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *CertificateKycRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CertificateKycRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *CertificateKycRequest) GetFrontCardImg() string {
	if x != nil {
		return x.FrontCardImg
	}
	return ""
}

func (x *CertificateKycRequest) GetBackCardImg() string {
	if x != nil {
		return x.BackCardImg
	}
	return ""
}

func (x *CertificateKycRequest) GetUserCardImg() string {
	if x != nil {
		return x.UserCardImg
	}
	return ""
}

func (x *CertificateKycRequest) GetCardType() string {
	if x != nil {
		return x.CardType
	}
	return ""
}

func (x *CertificateKycRequest) GetCardID() string {
	if x != nil {
		return x.CardID
	}
	return ""
}

func (x *CertificateKycRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type CertificateKycResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *CertificateKycResponse) Reset() {
	*x = CertificateKycResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificateKycResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateKycResponse) ProtoMessage() {}

func (x *CertificateKycResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateKycResponse.ProtoReflect.Descriptor instead.
func (*CertificateKycResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{27}
}

func (x *CertificateKycResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type GetGaQRCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AppID  string `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetGaQRCodeRequest) Reset() {
	*x = GetGaQRCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGaQRCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGaQRCodeRequest) ProtoMessage() {}

func (x *GetGaQRCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGaQRCodeRequest.ProtoReflect.Descriptor instead.
func (*GetGaQRCodeRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{28}
}

func (x *GetGaQRCodeRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetGaQRCodeRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetGaQRCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetGaQRCodeResponse) Reset() {
	*x = GetGaQRCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGaQRCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGaQRCodeResponse) ProtoMessage() {}

func (x *GetGaQRCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGaQRCodeResponse.ProtoReflect.Descriptor instead.
func (*GetGaQRCodeResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{29}
}

func (x *GetGaQRCodeResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type ForgetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Optional
	PhoneNumber string `protobuf:"bytes,1,opt,name=PhoneNumber,proto3" json:"PhoneNumber,omitempty"`
	// Optional
	EmailAddress string `protobuf:"bytes,3,opt,name=EmailAddress,proto3" json:"EmailAddress,omitempty"`
	Password     string `protobuf:"bytes,5,opt,name=Password,proto3" json:"Password,omitempty"`
	Code         string `protobuf:"bytes,6,opt,name=Code,proto3" json:"Code,omitempty"`
	AppID        string `protobuf:"bytes,7,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *ForgetPasswordRequest) Reset() {
	*x = ForgetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetPasswordRequest) ProtoMessage() {}

func (x *ForgetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetPasswordRequest.ProtoReflect.Descriptor instead.
func (*ForgetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{30}
}

func (x *ForgetPasswordRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *ForgetPasswordRequest) GetEmailAddress() string {
	if x != nil {
		return x.EmailAddress
	}
	return ""
}

func (x *ForgetPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ForgetPasswordRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ForgetPasswordRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type ForgetPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *ForgetPasswordResponse) Reset() {
	*x = ForgetPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ForgetPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForgetPasswordResponse) ProtoMessage() {}

func (x *ForgetPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForgetPasswordResponse.ProtoReflect.Descriptor instead.
func (*ForgetPasswordResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{31}
}

func (x *ForgetPasswordResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type DeleteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// an array of UserID who are being deleted.
	DeleteUserIDs []string `protobuf:"bytes,1,rep,name=DeleteUserIDs,proto3" json:"DeleteUserIDs,omitempty"`
	AppID         string   `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *DeleteUserRequest) Reset() {
	*x = DeleteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserRequest) ProtoMessage() {}

func (x *DeleteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{32}
}

func (x *DeleteUserRequest) GetDeleteUserIDs() []string {
	if x != nil {
		return x.DeleteUserIDs
	}
	return nil
}

func (x *DeleteUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type DeleteUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *DeleteUserResponse) Reset() {
	*x = DeleteUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResponse) ProtoMessage() {}

func (x *DeleteUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{33}
}

func (x *DeleteUserResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type AddUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID    string         `protobuf:"bytes,1,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserInfo *UserBasicInfo `protobuf:"bytes,2,opt,name=UserInfo,proto3" json:"UserInfo,omitempty"`
}

func (x *AddUserRequest) Reset() {
	*x = AddUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRequest) ProtoMessage() {}

func (x *AddUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRequest.ProtoReflect.Descriptor instead.
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{34}
}

func (x *AddUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *AddUserRequest) GetUserInfo() *UserBasicInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

type AddUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserBasicInfo `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *AddUserResponse) Reset() {
	*x = AddUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserResponse) ProtoMessage() {}

func (x *AddUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserResponse.ProtoReflect.Descriptor instead.
func (*AddUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{35}
}

func (x *AddUserResponse) GetInfo() *UserBasicInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type FrozenUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID      string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	FrozenBy    string `protobuf:"bytes,3,opt,name=FrozenBy,proto3" json:"FrozenBy,omitempty"`
	FrozenCause string `protobuf:"bytes,4,opt,name=FrozenCause,proto3" json:"FrozenCause,omitempty"`
	StartAt     uint32 `protobuf:"varint,5,opt,name=StartAt,proto3" json:"StartAt,omitempty"`
	EndAt       uint32 `protobuf:"varint,6,opt,name=EndAt,proto3" json:"EndAt,omitempty"`
	Status      string `protobuf:"bytes,7,opt,name=Status,proto3" json:"Status,omitempty"`
	UnfrozenBy  string `protobuf:"bytes,8,opt,name=UnfrozenBy,proto3" json:"UnfrozenBy,omitempty"`
}

func (x *FrozenUser) Reset() {
	*x = FrozenUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrozenUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrozenUser) ProtoMessage() {}

func (x *FrozenUser) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrozenUser.ProtoReflect.Descriptor instead.
func (*FrozenUser) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{36}
}

func (x *FrozenUser) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *FrozenUser) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *FrozenUser) GetFrozenBy() string {
	if x != nil {
		return x.FrozenBy
	}
	return ""
}

func (x *FrozenUser) GetFrozenCause() string {
	if x != nil {
		return x.FrozenCause
	}
	return ""
}

func (x *FrozenUser) GetStartAt() uint32 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *FrozenUser) GetEndAt() uint32 {
	if x != nil {
		return x.EndAt
	}
	return 0
}

func (x *FrozenUser) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FrozenUser) GetUnfrozenBy() string {
	if x != nil {
		return x.UnfrozenBy
	}
	return ""
}

type FrozenUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	FrozenBy    string `protobuf:"bytes,2,opt,name=FrozenBy,proto3" json:"FrozenBy,omitempty"`
	FrozenCause string `protobuf:"bytes,3,opt,name=FrozenCause,proto3" json:"FrozenCause,omitempty"`
	AppID       string `protobuf:"bytes,4,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *FrozenUserRequest) Reset() {
	*x = FrozenUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrozenUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrozenUserRequest) ProtoMessage() {}

func (x *FrozenUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrozenUserRequest.ProtoReflect.Descriptor instead.
func (*FrozenUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{37}
}

func (x *FrozenUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *FrozenUserRequest) GetFrozenBy() string {
	if x != nil {
		return x.FrozenBy
	}
	return ""
}

func (x *FrozenUserRequest) GetFrozenCause() string {
	if x != nil {
		return x.FrozenCause
	}
	return ""
}

func (x *FrozenUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type FrozenUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FrozenUser `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *FrozenUserResponse) Reset() {
	*x = FrozenUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrozenUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrozenUserResponse) ProtoMessage() {}

func (x *FrozenUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrozenUserResponse.ProtoReflect.Descriptor instead.
func (*FrozenUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{38}
}

func (x *FrozenUserResponse) GetInfo() *FrozenUser {
	if x != nil {
		return x.Info
	}
	return nil
}

type QueryUserFrozenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AppID  string `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *QueryUserFrozenRequest) Reset() {
	*x = QueryUserFrozenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserFrozenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserFrozenRequest) ProtoMessage() {}

func (x *QueryUserFrozenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserFrozenRequest.ProtoReflect.Descriptor instead.
func (*QueryUserFrozenRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{39}
}

func (x *QueryUserFrozenRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *QueryUserFrozenRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type QueryUserFrozenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FrozenUser `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *QueryUserFrozenResponse) Reset() {
	*x = QueryUserFrozenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserFrozenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserFrozenResponse) ProtoMessage() {}

func (x *QueryUserFrozenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserFrozenResponse.ProtoReflect.Descriptor instead.
func (*QueryUserFrozenResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{40}
}

func (x *QueryUserFrozenResponse) GetInfo() *FrozenUser {
	if x != nil {
		return x.Info
	}
	return nil
}

type UnfrozenUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID     string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UnfrozenBy string `protobuf:"bytes,3,opt,name=UnfrozenBy,proto3" json:"UnfrozenBy,omitempty"`
	AppID      string `protobuf:"bytes,4,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *UnfrozenUserRequest) Reset() {
	*x = UnfrozenUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnfrozenUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfrozenUserRequest) ProtoMessage() {}

func (x *UnfrozenUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfrozenUserRequest.ProtoReflect.Descriptor instead.
func (*UnfrozenUserRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{41}
}

func (x *UnfrozenUserRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *UnfrozenUserRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UnfrozenUserRequest) GetUnfrozenBy() string {
	if x != nil {
		return x.UnfrozenBy
	}
	return ""
}

func (x *UnfrozenUserRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type UnfrozenUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *FrozenUser `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *UnfrozenUserResponse) Reset() {
	*x = UnfrozenUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnfrozenUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnfrozenUserResponse) ProtoMessage() {}

func (x *UnfrozenUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnfrozenUserResponse.ProtoReflect.Descriptor instead.
func (*UnfrozenUserResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{42}
}

func (x *UnfrozenUserResponse) GetInfo() *FrozenUser {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetFrozenUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  *PageInfo `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
	AppID string    `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetFrozenUsersRequest) Reset() {
	*x = GetFrozenUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFrozenUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFrozenUsersRequest) ProtoMessage() {}

func (x *GetFrozenUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFrozenUsersRequest.ProtoReflect.Descriptor instead.
func (*GetFrozenUsersRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{43}
}

func (x *GetFrozenUsersRequest) GetInfo() *PageInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetFrozenUsersRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetFrozenUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*FrozenUser `protobuf:"bytes,1,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetFrozenUsersResponse) Reset() {
	*x = GetFrozenUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFrozenUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFrozenUsersResponse) ProtoMessage() {}

func (x *GetFrozenUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFrozenUsersResponse.ProtoReflect.Descriptor instead.
func (*GetFrozenUsersResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{44}
}

func (x *GetFrozenUsersResponse) GetInfos() []*FrozenUser {
	if x != nil {
		return x.Infos
	}
	return nil
}

type GetUserProvidersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	AppID  string `protobuf:"bytes,2,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *GetUserProvidersRequest) Reset() {
	*x = GetUserProvidersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProvidersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProvidersRequest) ProtoMessage() {}

func (x *GetUserProvidersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProvidersRequest.ProtoReflect.Descriptor instead.
func (*GetUserProvidersRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{45}
}

func (x *GetUserProvidersRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *GetUserProvidersRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type GetUserProvidersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UserProvider `protobuf:"bytes,1,rep,name=Infos,proto3" json:"Infos,omitempty"`
}

func (x *GetUserProvidersResponse) Reset() {
	*x = GetUserProvidersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProvidersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProvidersResponse) ProtoMessage() {}

func (x *GetUserProvidersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProvidersResponse.ProtoReflect.Descriptor instead.
func (*GetUserProvidersResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{46}
}

func (x *GetUserProvidersResponse) GetInfos() []*UserProvider {
	if x != nil {
		return x.Infos
	}
	return nil
}

type QueryUserExistRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	AppID    string `protobuf:"bytes,3,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *QueryUserExistRequest) Reset() {
	*x = QueryUserExistRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserExistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserExistRequest) ProtoMessage() {}

func (x *QueryUserExistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserExistRequest.ProtoReflect.Descriptor instead.
func (*QueryUserExistRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{47}
}

func (x *QueryUserExistRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QueryUserExistRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *QueryUserExistRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type QueryUserExistResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserBasicInfo `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *QueryUserExistResponse) Reset() {
	*x = QueryUserExistResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserExistResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserExistResponse) ProtoMessage() {}

func (x *QueryUserExistResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserExistResponse.ProtoReflect.Descriptor instead.
func (*QueryUserExistResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{48}
}

func (x *QueryUserExistResponse) GetInfo() *UserBasicInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type QueryProviderUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserProviderInfo *UserProvider  `protobuf:"bytes,1,opt,name=UserProviderInfo,proto3" json:"UserProviderInfo,omitempty"`
	UserBasicInfo    *UserBasicInfo `protobuf:"bytes,2,opt,name=UserBasicInfo,proto3" json:"UserBasicInfo,omitempty"`
}

func (x *QueryProviderUserInfo) Reset() {
	*x = QueryProviderUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProviderUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProviderUserInfo) ProtoMessage() {}

func (x *QueryProviderUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProviderUserInfo.ProtoReflect.Descriptor instead.
func (*QueryProviderUserInfo) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{49}
}

func (x *QueryProviderUserInfo) GetUserProviderInfo() *UserProvider {
	if x != nil {
		return x.UserProviderInfo
	}
	return nil
}

func (x *QueryProviderUserInfo) GetUserBasicInfo() *UserBasicInfo {
	if x != nil {
		return x.UserBasicInfo
	}
	return nil
}

type QueryUserByUserProviderIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderID     string `protobuf:"bytes,1,opt,name=ProviderID,proto3" json:"ProviderID,omitempty"`
	ProviderUserID string `protobuf:"bytes,2,opt,name=ProviderUserID,proto3" json:"ProviderUserID,omitempty"`
	AppID          string `protobuf:"bytes,3,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *QueryUserByUserProviderIDRequest) Reset() {
	*x = QueryUserByUserProviderIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserByUserProviderIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserByUserProviderIDRequest) ProtoMessage() {}

func (x *QueryUserByUserProviderIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserByUserProviderIDRequest.ProtoReflect.Descriptor instead.
func (*QueryUserByUserProviderIDRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{50}
}

func (x *QueryUserByUserProviderIDRequest) GetProviderID() string {
	if x != nil {
		return x.ProviderID
	}
	return ""
}

func (x *QueryUserByUserProviderIDRequest) GetProviderUserID() string {
	if x != nil {
		return x.ProviderUserID
	}
	return ""
}

func (x *QueryUserByUserProviderIDRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type QueryUserByUserProviderIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *QueryProviderUserInfo `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *QueryUserByUserProviderIDResponse) Reset() {
	*x = QueryUserByUserProviderIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryUserByUserProviderIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryUserByUserProviderIDResponse) ProtoMessage() {}

func (x *QueryUserByUserProviderIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryUserByUserProviderIDResponse.ProtoReflect.Descriptor instead.
func (*QueryUserByUserProviderIDResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{51}
}

func (x *QueryUserByUserProviderIDResponse) GetInfo() *QueryProviderUserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type SetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password,proto3" json:"Password,omitempty"`
	AppID    string `protobuf:"bytes,3,opt,name=AppID,proto3" json:"AppID,omitempty"`
}

func (x *SetPasswordRequest) Reset() {
	*x = SetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPasswordRequest) ProtoMessage() {}

func (x *SetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPasswordRequest.ProtoReflect.Descriptor instead.
func (*SetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{52}
}

func (x *SetPasswordRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SetPasswordRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

type SetPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *SetPasswordResponse) Reset() {
	*x = SetPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPasswordResponse) ProtoMessage() {}

func (x *SetPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPasswordResponse.ProtoReflect.Descriptor instead.
func (*SetPasswordResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{53}
}

func (x *SetPasswordResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type GetUserDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppID  string `protobuf:"bytes,1,opt,name=AppID,proto3" json:"AppID,omitempty"`
	UserID string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *GetUserDetailsRequest) Reset() {
	*x = GetUserDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDetailsRequest) ProtoMessage() {}

func (x *GetUserDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetUserDetailsRequest) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{54}
}

func (x *GetUserDetailsRequest) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *GetUserDetailsRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type UserDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserBasicInfo *UserBasicInfo               `protobuf:"bytes,1,opt,name=UserBasicInfo,proto3" json:"UserBasicInfo,omitempty"`
	UserAppInfo   *npool.ApplicationUserDetail `protobuf:"bytes,2,opt,name=UserAppInfo,proto3" json:"UserAppInfo,omitempty"`
}

func (x *UserDetails) Reset() {
	*x = UserDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDetails) ProtoMessage() {}

func (x *UserDetails) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDetails.ProtoReflect.Descriptor instead.
func (*UserDetails) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{55}
}

func (x *UserDetails) GetUserBasicInfo() *UserBasicInfo {
	if x != nil {
		return x.UserBasicInfo
	}
	return nil
}

func (x *UserDetails) GetUserAppInfo() *npool.ApplicationUserDetail {
	if x != nil {
		return x.UserAppInfo
	}
	return nil
}

type GetUserDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *UserDetails `protobuf:"bytes,1,opt,name=Info,proto3" json:"Info,omitempty"`
}

func (x *GetUserDetailsResponse) Reset() {
	*x = GetUserDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_npool_user_management_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDetailsResponse) ProtoMessage() {}

func (x *GetUserDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_npool_user_management_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetUserDetailsResponse) Descriptor() ([]byte, []int) {
	return file_npool_user_management_proto_rawDescGZIP(), []int{56}
}

func (x *GetUserDetailsResponse) GetInfo() *UserDetails {
	if x != nil {
		return x.Info
	}
	return nil
}

var File_npool_user_management_proto protoreflect.FileDescriptor

var file_npool_user_management_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x22, 0x6e, 0x70, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x25, 0x0a, 0x0f, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x44, 0x0a, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0xef, 0x04, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x41, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x41, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x42, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x43, 0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x43, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4b, 0x79, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x4b, 0x79, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x47, 0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x47, 0x61, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x47, 0x61, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x47,
	0x61, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x69,
	0x67, 0x6e, 0x75, 0x70, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x61,
	0x72, 0x65, 0x65, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x61, 0x72, 0x65,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xb7, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x3c,
	0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3e, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x3d, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4e, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x40, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x71, 0x0a,
	0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x44, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x66, 0x0a, 0x14, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x2b,
	0x0a, 0x15, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x7c, 0x0a, 0x14, 0x42,
	0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x2b, 0x0a, 0x15, 0x42, 0x69, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a, 0x16, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x2d,
	0x0a, 0x17, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a,
	0x16, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x2d, 0x0a, 0x17, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0xe2, 0x01, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a,
	0x0e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0xb9, 0x01, 0x0a, 0x15, 0x42, 0x69,
	0x6e, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x43, 0x0a, 0x16, 0x42, 0x69, 0x6e, 0x64, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x67, 0x0a, 0x17, 0x55, 0x6e,
	0x62, 0x69, 0x6e, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x45, 0x0a, 0x18, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x29, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x19, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x6c, 0x64, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x6c, 0x64,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x22, 0x30, 0x0a, 0x1a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb3, 0x02, 0x0a, 0x15, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x67, 0x12, 0x20, 0x0a, 0x0b,
	0x42, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x42, 0x61, 0x63, 0x6b, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x67, 0x12, 0x20,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x2c, 0x0a, 0x16,
	0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4b, 0x79, 0x63, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x42, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x47, 0x61, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x29,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x47, 0x61, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xa3, 0x01, 0x0a, 0x15, 0x46, 0x6f,
	0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70,
	0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22,
	0x2c, 0x0a, 0x16, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4f, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x28,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70,
	0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44,
	0x12, 0x32, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x3d, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xda, 0x01, 0x0a, 0x0a, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x46, 0x72,
	0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x46, 0x72,
	0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x43, 0x61, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x46, 0x72, 0x6f,
	0x7a, 0x65, 0x6e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x55, 0x6e, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x6e, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x79,
	0x22, 0x7f, 0x0a, 0x11, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x46, 0x72, 0x6f,
	0x7a, 0x65, 0x6e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x43, 0x61, 0x75, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x22, 0x3d, 0x0a, 0x12, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x46, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f,
	0x7a, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x42, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x73, 0x0a, 0x13,
	0x55, 0x6e, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x55,
	0x6e, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x55, 0x6e, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x42, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x22, 0x3f, 0x0a, 0x14, 0x55, 0x6e, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x54, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x43, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x47, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x47, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x65, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x44, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x73,
	0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x98, 0x01, 0x0a,
	0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x10, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3c, 0x0a, 0x0d, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x80, 0x01, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x21, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x62, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x41, 0x70, 0x70, 0x49, 0x44, 0x22, 0x29, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x45, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x41,
	0x70, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x41, 0x70, 0x70, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x55, 0x73, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x52, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0b,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x42, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x32,
	0xc8, 0x14, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x18, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x22, 0x08, 0x2f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x50, 0x0a, 0x06, 0x53, 0x69,
	0x67, 0x6e, 0x55, 0x70, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0a, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x3a, 0x01, 0x2a, 0x12, 0x55, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x11, 0x22, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x3a, 0x01, 0x2a, 0x12, 0x72, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14,
	0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x59, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12,
	0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x3a,
	0x01, 0x2a, 0x12, 0x6d, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f,
	0x76, 0x31, 0x2f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01,
	0x2a, 0x12, 0x69, 0x0a, 0x0d, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x69, 0x6e, 0x64, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x69, 0x0a, 0x0d,
	0x42, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69, 0x6e, 0x64, 0x2f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a, 0x0f, 0x55, 0x6e, 0x62, 0x69, 0x6e,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x6e, 0x62, 0x69, 0x6e,
	0x64, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a, 0x0f, 0x55, 0x6e,
	0x62, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x6e,
	0x62, 0x69, 0x6e, 0x64, 0x2f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a,
	0x0e, 0x42, 0x69, 0x6e, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x12,
	0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x6e, 0x64, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x69,
	0x6e, 0x64, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x3a, 0x01, 0x2a,
	0x12, 0x79, 0x0a, 0x10, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x12, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x6e, 0x62, 0x69, 0x6e, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x6e, 0x62, 0x69, 0x6e, 0x64, 0x2f, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x7d, 0x0a, 0x12, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2f, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a, 0x0e, 0x46, 0x6f,
	0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1e, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x6f, 0x72, 0x67, 0x65,
	0x74, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0x65, 0x0a,
	0x0b, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1b, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22,
	0x10, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x74, 0x2f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x3a, 0x01, 0x2a, 0x12, 0x55, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x64, 0x64, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x62, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x3a, 0x01, 0x2a, 0x12,
	0x61, 0x0a, 0x0a, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f,
	0x2f, 0x76, 0x31, 0x2f, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a,
	0x01, 0x2a, 0x12, 0x69, 0x0a, 0x0c, 0x55, 0x6e, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x66,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x66, 0x72, 0x6f,
	0x7a, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x6e, 0x66,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x76, 0x0a,
	0x0f, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31,
	0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x66, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x7a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x12, 0x20, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x3a, 0x01, 0x2a, 0x12, 0x72, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x45, 0x78, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x65, 0x78, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x9f, 0x01, 0x0a, 0x19, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x29, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x62, 0x79, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x69, 0x64, 0x3a, 0x01, 0x2a, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x70, 0x6f, 0x6f, 0x6c, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6e,
	0x70, 0x6f, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_npool_user_management_proto_rawDescOnce sync.Once
	file_npool_user_management_proto_rawDescData = file_npool_user_management_proto_rawDesc
)

func file_npool_user_management_proto_rawDescGZIP() []byte {
	file_npool_user_management_proto_rawDescOnce.Do(func() {
		file_npool_user_management_proto_rawDescData = protoimpl.X.CompressGZIP(file_npool_user_management_proto_rawDescData)
	})
	return file_npool_user_management_proto_rawDescData
}

var file_npool_user_management_proto_msgTypes = make([]protoimpl.MessageInfo, 57)
var file_npool_user_management_proto_goTypes = []interface{}{
	(*VersionResponse)(nil),                   // 0: user.v1.VersionResponse
	(*PageInfo)(nil),                          // 1: user.v1.PageInfo
	(*UserBasicInfo)(nil),                     // 2: user.v1.UserBasicInfo
	(*SignupRequest)(nil),                     // 3: user.v1.SignupRequest
	(*SignupResponse)(nil),                    // 4: user.v1.SignupResponse
	(*GetUserRequest)(nil),                    // 5: user.v1.GetUserRequest
	(*GetUserResponse)(nil),                   // 6: user.v1.GetUserResponse
	(*GetUsersRequest)(nil),                   // 7: user.v1.GetUsersRequest
	(*GetUsersResponse)(nil),                  // 8: user.v1.GetUsersResponse
	(*UpdateUserInfoRequest)(nil),             // 9: user.v1.UpdateUserInfoRequest
	(*UpdateUserInfoResponse)(nil),            // 10: user.v1.UpdateUserInfoResponse
	(*BindUserPhoneRequest)(nil),              // 11: user.v1.BindUserPhoneRequest
	(*BindUserPhoneResponse)(nil),             // 12: user.v1.BindUserPhoneResponse
	(*BindUserEmailRequest)(nil),              // 13: user.v1.BindUserEmailRequest
	(*BindUserEmailResponse)(nil),             // 14: user.v1.BindUserEmailResponse
	(*UnbindUserPhoneRequest)(nil),            // 15: user.v1.UnbindUserPhoneRequest
	(*UnbindUserPhoneResponse)(nil),           // 16: user.v1.UnbindUserPhoneResponse
	(*UnbindUserEmailRequest)(nil),            // 17: user.v1.UnbindUserEmailRequest
	(*UnbindUserEmailResponse)(nil),           // 18: user.v1.UnbindUserEmailResponse
	(*UserProvider)(nil),                      // 19: user.v1.UserProvider
	(*BindThirdPartyRequest)(nil),             // 20: user.v1.BindThirdPartyRequest
	(*BindThirdPartyResponse)(nil),            // 21: user.v1.BindThirdPartyResponse
	(*UnbindThirdPartyRequest)(nil),           // 22: user.v1.UnbindThirdPartyRequest
	(*UnbindThirdPartyResponse)(nil),          // 23: user.v1.UnbindThirdPartyResponse
	(*ChangeUserPasswordRequest)(nil),         // 24: user.v1.ChangeUserPasswordRequest
	(*ChangeUserPasswordResponse)(nil),        // 25: user.v1.ChangeUserPasswordResponse
	(*CertificateKycRequest)(nil),             // 26: user.v1.CertificateKycRequest
	(*CertificateKycResponse)(nil),            // 27: user.v1.CertificateKycResponse
	(*GetGaQRCodeRequest)(nil),                // 28: user.v1.GetGaQRCodeRequest
	(*GetGaQRCodeResponse)(nil),               // 29: user.v1.GetGaQRCodeResponse
	(*ForgetPasswordRequest)(nil),             // 30: user.v1.ForgetPasswordRequest
	(*ForgetPasswordResponse)(nil),            // 31: user.v1.ForgetPasswordResponse
	(*DeleteUserRequest)(nil),                 // 32: user.v1.DeleteUserRequest
	(*DeleteUserResponse)(nil),                // 33: user.v1.DeleteUserResponse
	(*AddUserRequest)(nil),                    // 34: user.v1.AddUserRequest
	(*AddUserResponse)(nil),                   // 35: user.v1.AddUserResponse
	(*FrozenUser)(nil),                        // 36: user.v1.FrozenUser
	(*FrozenUserRequest)(nil),                 // 37: user.v1.FrozenUserRequest
	(*FrozenUserResponse)(nil),                // 38: user.v1.FrozenUserResponse
	(*QueryUserFrozenRequest)(nil),            // 39: user.v1.QueryUserFrozenRequest
	(*QueryUserFrozenResponse)(nil),           // 40: user.v1.QueryUserFrozenResponse
	(*UnfrozenUserRequest)(nil),               // 41: user.v1.UnfrozenUserRequest
	(*UnfrozenUserResponse)(nil),              // 42: user.v1.UnfrozenUserResponse
	(*GetFrozenUsersRequest)(nil),             // 43: user.v1.GetFrozenUsersRequest
	(*GetFrozenUsersResponse)(nil),            // 44: user.v1.GetFrozenUsersResponse
	(*GetUserProvidersRequest)(nil),           // 45: user.v1.GetUserProvidersRequest
	(*GetUserProvidersResponse)(nil),          // 46: user.v1.GetUserProvidersResponse
	(*QueryUserExistRequest)(nil),             // 47: user.v1.QueryUserExistRequest
	(*QueryUserExistResponse)(nil),            // 48: user.v1.QueryUserExistResponse
	(*QueryProviderUserInfo)(nil),             // 49: user.v1.QueryProviderUserInfo
	(*QueryUserByUserProviderIDRequest)(nil),  // 50: user.v1.QueryUserByUserProviderIDRequest
	(*QueryUserByUserProviderIDResponse)(nil), // 51: user.v1.QueryUserByUserProviderIDResponse
	(*SetPasswordRequest)(nil),                // 52: user.v1.SetPasswordRequest
	(*SetPasswordResponse)(nil),               // 53: user.v1.SetPasswordResponse
	(*GetUserDetailsRequest)(nil),             // 54: user.v1.GetUserDetailsRequest
	(*UserDetails)(nil),                       // 55: user.v1.UserDetails
	(*GetUserDetailsResponse)(nil),            // 56: user.v1.GetUserDetailsResponse
	(*npool.ApplicationUserDetail)(nil),       // 57: application.management.v1.ApplicationUserDetail
	(*emptypb.Empty)(nil),                     // 58: google.protobuf.Empty
}
var file_npool_user_management_proto_depIdxs = []int32{
	2,  // 0: user.v1.SignupResponse.Info:type_name -> user.v1.UserBasicInfo
	2,  // 1: user.v1.GetUserResponse.Info:type_name -> user.v1.UserBasicInfo
	1,  // 2: user.v1.GetUsersRequest.Info:type_name -> user.v1.PageInfo
	2,  // 3: user.v1.GetUsersResponse.Infos:type_name -> user.v1.UserBasicInfo
	2,  // 4: user.v1.UpdateUserInfoRequest.Info:type_name -> user.v1.UserBasicInfo
	2,  // 5: user.v1.UpdateUserInfoResponse.Info:type_name -> user.v1.UserBasicInfo
	19, // 6: user.v1.BindThirdPartyResponse.Info:type_name -> user.v1.UserProvider
	19, // 7: user.v1.UnbindThirdPartyResponse.Info:type_name -> user.v1.UserProvider
	2,  // 8: user.v1.AddUserRequest.UserInfo:type_name -> user.v1.UserBasicInfo
	2,  // 9: user.v1.AddUserResponse.Info:type_name -> user.v1.UserBasicInfo
	36, // 10: user.v1.FrozenUserResponse.Info:type_name -> user.v1.FrozenUser
	36, // 11: user.v1.QueryUserFrozenResponse.Info:type_name -> user.v1.FrozenUser
	36, // 12: user.v1.UnfrozenUserResponse.Info:type_name -> user.v1.FrozenUser
	1,  // 13: user.v1.GetFrozenUsersRequest.Info:type_name -> user.v1.PageInfo
	36, // 14: user.v1.GetFrozenUsersResponse.Infos:type_name -> user.v1.FrozenUser
	19, // 15: user.v1.GetUserProvidersResponse.Infos:type_name -> user.v1.UserProvider
	2,  // 16: user.v1.QueryUserExistResponse.Info:type_name -> user.v1.UserBasicInfo
	19, // 17: user.v1.QueryProviderUserInfo.UserProviderInfo:type_name -> user.v1.UserProvider
	2,  // 18: user.v1.QueryProviderUserInfo.UserBasicInfo:type_name -> user.v1.UserBasicInfo
	49, // 19: user.v1.QueryUserByUserProviderIDResponse.Info:type_name -> user.v1.QueryProviderUserInfo
	2,  // 20: user.v1.UserDetails.UserBasicInfo:type_name -> user.v1.UserBasicInfo
	57, // 21: user.v1.UserDetails.UserAppInfo:type_name -> application.management.v1.ApplicationUserDetail
	55, // 22: user.v1.GetUserDetailsResponse.Info:type_name -> user.v1.UserDetails
	58, // 23: user.v1.User.Version:input_type -> google.protobuf.Empty
	3,  // 24: user.v1.User.SignUp:input_type -> user.v1.SignupRequest
	5,  // 25: user.v1.User.GetUser:input_type -> user.v1.GetUserRequest
	54, // 26: user.v1.User.GetUserDetails:input_type -> user.v1.GetUserDetailsRequest
	7,  // 27: user.v1.User.GetUsers:input_type -> user.v1.GetUsersRequest
	9,  // 28: user.v1.User.UpdateUserInfo:input_type -> user.v1.UpdateUserInfoRequest
	11, // 29: user.v1.User.BindUserPhone:input_type -> user.v1.BindUserPhoneRequest
	13, // 30: user.v1.User.BindUserEmail:input_type -> user.v1.BindUserEmailRequest
	15, // 31: user.v1.User.UnbindUserPhone:input_type -> user.v1.UnbindUserPhoneRequest
	17, // 32: user.v1.User.UnbindUserEmail:input_type -> user.v1.UnbindUserEmailRequest
	20, // 33: user.v1.User.BindThirdParty:input_type -> user.v1.BindThirdPartyRequest
	22, // 34: user.v1.User.UnbindThirdParty:input_type -> user.v1.UnbindThirdPartyRequest
	24, // 35: user.v1.User.ChangeUserPassword:input_type -> user.v1.ChangeUserPasswordRequest
	30, // 36: user.v1.User.ForgetPassword:input_type -> user.v1.ForgetPasswordRequest
	52, // 37: user.v1.User.SetPassword:input_type -> user.v1.SetPasswordRequest
	34, // 38: user.v1.User.AddUser:input_type -> user.v1.AddUserRequest
	32, // 39: user.v1.User.DeleteUser:input_type -> user.v1.DeleteUserRequest
	37, // 40: user.v1.User.FrozenUser:input_type -> user.v1.FrozenUserRequest
	41, // 41: user.v1.User.UnfrozenUser:input_type -> user.v1.UnfrozenUserRequest
	39, // 42: user.v1.User.QueryUserFrozen:input_type -> user.v1.QueryUserFrozenRequest
	43, // 43: user.v1.User.GetFrozenUsers:input_type -> user.v1.GetFrozenUsersRequest
	45, // 44: user.v1.User.GetUserProviders:input_type -> user.v1.GetUserProvidersRequest
	47, // 45: user.v1.User.QueryUserExist:input_type -> user.v1.QueryUserExistRequest
	50, // 46: user.v1.User.QueryUserByUserProviderID:input_type -> user.v1.QueryUserByUserProviderIDRequest
	0,  // 47: user.v1.User.Version:output_type -> user.v1.VersionResponse
	4,  // 48: user.v1.User.SignUp:output_type -> user.v1.SignupResponse
	6,  // 49: user.v1.User.GetUser:output_type -> user.v1.GetUserResponse
	56, // 50: user.v1.User.GetUserDetails:output_type -> user.v1.GetUserDetailsResponse
	8,  // 51: user.v1.User.GetUsers:output_type -> user.v1.GetUsersResponse
	10, // 52: user.v1.User.UpdateUserInfo:output_type -> user.v1.UpdateUserInfoResponse
	12, // 53: user.v1.User.BindUserPhone:output_type -> user.v1.BindUserPhoneResponse
	14, // 54: user.v1.User.BindUserEmail:output_type -> user.v1.BindUserEmailResponse
	16, // 55: user.v1.User.UnbindUserPhone:output_type -> user.v1.UnbindUserPhoneResponse
	18, // 56: user.v1.User.UnbindUserEmail:output_type -> user.v1.UnbindUserEmailResponse
	21, // 57: user.v1.User.BindThirdParty:output_type -> user.v1.BindThirdPartyResponse
	23, // 58: user.v1.User.UnbindThirdParty:output_type -> user.v1.UnbindThirdPartyResponse
	25, // 59: user.v1.User.ChangeUserPassword:output_type -> user.v1.ChangeUserPasswordResponse
	31, // 60: user.v1.User.ForgetPassword:output_type -> user.v1.ForgetPasswordResponse
	53, // 61: user.v1.User.SetPassword:output_type -> user.v1.SetPasswordResponse
	35, // 62: user.v1.User.AddUser:output_type -> user.v1.AddUserResponse
	33, // 63: user.v1.User.DeleteUser:output_type -> user.v1.DeleteUserResponse
	38, // 64: user.v1.User.FrozenUser:output_type -> user.v1.FrozenUserResponse
	42, // 65: user.v1.User.UnfrozenUser:output_type -> user.v1.UnfrozenUserResponse
	40, // 66: user.v1.User.QueryUserFrozen:output_type -> user.v1.QueryUserFrozenResponse
	44, // 67: user.v1.User.GetFrozenUsers:output_type -> user.v1.GetFrozenUsersResponse
	46, // 68: user.v1.User.GetUserProviders:output_type -> user.v1.GetUserProvidersResponse
	48, // 69: user.v1.User.QueryUserExist:output_type -> user.v1.QueryUserExistResponse
	51, // 70: user.v1.User.QueryUserByUserProviderID:output_type -> user.v1.QueryUserByUserProviderIDResponse
	47, // [47:71] is the sub-list for method output_type
	23, // [23:47] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_npool_user_management_proto_init() }
func file_npool_user_management_proto_init() {
	if File_npool_user_management_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_npool_user_management_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserBasicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindUserPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindUserPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindUserEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindUserEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindUserPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindUserPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindUserEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindUserEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserProvider); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindThirdPartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BindThirdPartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindThirdPartyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnbindThirdPartyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeUserPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeUserPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertificateKycRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertificateKycResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGaQRCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGaQRCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ForgetPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrozenUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrozenUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrozenUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserFrozenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserFrozenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnfrozenUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnfrozenUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFrozenUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFrozenUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProvidersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserProvidersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserExistRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserExistResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProviderUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserByUserProviderIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryUserByUserProviderIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_npool_user_management_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_npool_user_management_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   57,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_npool_user_management_proto_goTypes,
		DependencyIndexes: file_npool_user_management_proto_depIdxs,
		MessageInfos:      file_npool_user_management_proto_msgTypes,
	}.Build()
	File_npool_user_management_proto = out.File
	file_npool_user_management_proto_rawDesc = nil
	file_npool_user_management_proto_goTypes = nil
	file_npool_user_management_proto_depIdxs = nil
}
